//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "User")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "FirstName")]
    pub first_name: String,
    #[sea_orm(column_name = "LastName")]
    pub last_name: String,
    #[sea_orm(column_name = "Username", unique)]
    pub username: String,
    #[sea_orm(column_name = "Password")]
    pub password: String,
    #[sea_orm(column_name = "PhoneNumber")]
    pub phone_number: Option<String>,
    pub email: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::cat::Entity> for Entity {
    fn to() -> RelationDef {
        super::user_pet::Relation::Cat.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::user_pet::Relation::User.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
